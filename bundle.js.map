{"version":3,"sources":["webpack:///webpack/bootstrap 1fcdeabf58d22fad6012","webpack:///./main.js","webpack:///./js/draw_grid.js","webpack:///./js/expand_mandlebrot.js","webpack:///./js/draw_mandlebrot.js"],"names":["document","addEventListener","fractalCanvas","getElementById","gridCanvas","dragCanvas","gridCtx","getContext","dragCtx","console","log","width","centerR","centerI","center","r","i","scale","viewPort","showGridButton","onclick","innerHTML","style","visibility","real","imaginary","updateCenterDisplay","toFixed","currentZoomDisplay","slideFactor","slideLeft","slideRight","slideUp","slideDown","left","right","up","down","zoomFactor","zoomIn","zoomOut","resetZoom","zoom","zoomReset","zoomBack","onkeydown","e","preventDefault","keyCode","drawGrid","ctx","clearRect","strokeStyle","moveTo","lineTo","stroke","font","p","fillText","expandMandlebrot","max","incsCount","magnitude","Math","sqrt","newReal","drawMandlebrot","canvas","colorsObj","height","imgData","getImageData","cutoffs","Object","keys","j","data","length","x","y","incsToEscape","k","putImageData"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1fcdeabf58d22fad6012","import drawGrid from './js/draw_grid.js';\n\nimport expandMandlebrot from './js/expand_mandlebrot';\n\nimport drawMandlebrot from './js/draw_mandlebrot';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const fractalCanvas = document.getElementById('fractal');\n  const gridCanvas = document.getElementById('grid');\n  const dragCanvas = document.getElementById('drag');\n\n  const gridCtx = gridCanvas.getContext(\"2d\");\n  const dragCtx = dragCanvas.getContext(\"2d\");\n  // const fractalCtx = fractalCanvas.getContext(\"2d\");\n\n  console.log(gridCanvas.width);\n\n  //set center\n  let centerR = 0;\n  let centerI = 0;\n\n  //set complex center\n\n  const center = {r: centerR, i: centerI};\n\n  //Set scale\n  let scale = 2;\n\n  //Set viewPort object for drawing Mandlebrot...\n  const viewPort = { scale, center };\n\n  drawMandlebrot(fractalCanvas, viewPort, { 2: [0, 0, 0],\n                                            10: [255, 0, 0],\n                                            100: [0, 0, 255],\n                                            500: [255, 255, 255] }, 501);\n\n  // fractalCtx.fillStyle = \"#990\";\n  // fractalCtx.fillRect(0, 0, 500, 500);\n\n  drawGrid(gridCtx, center, scale);\n\n  //Button to Show  and hide Grid\n  const showGridButton = document.getElementById('grid-on-off');\n  showGridButton.onclick = () => {\n    if(showGridButton.innerHTML === 'hide grid') {\n      showGridButton.innerHTML = 'show grid';\n      gridCanvas.style.visibility = 'hidden';\n    } else {\n      showGridButton.innerHTML = 'hide grid';\n      drawGrid(gridCtx, center, scale);\n      gridCanvas.style.visibility = 'visible';\n    }\n  };\n\n  const real = document.getElementById('real');\n  const imaginary = document.getElementById('imaginary');\n\n  const updateCenterDisplay = () => {\n    real.innerHTML = center.r.toFixed(3);\n    imaginary.innerHTML = `${center.i.toFixed(3)}i`;\n    currentZoomDisplay.innerHTML = `${(3 / scale).toFixed(3)} x`;\n    drawGrid(gridCtx, center, scale);\n  };\n\n  const slideFactor = (1 / 5);\n\n  const slideLeft = () => {\n    center.r -= (scale * slideFactor);\n    updateCenterDisplay();\n  };\n\n  const slideRight = () => {\n    center.r += (scale * slideFactor);\n    updateCenterDisplay();\n  };\n\n  const slideUp = () => {\n    center.i -= (scale * slideFactor);\n    updateCenterDisplay();\n  };\n\n  const slideDown = () => {\n    center.i += (scale * slideFactor);\n    updateCenterDisplay();\n  };\n\n  const left = document.getElementById('slide-left');\n  left.onclick = slideLeft;\n\n  const right = document.getElementById('slide-right');\n  right.onclick = slideRight;\n\n  const up = document.getElementById('slide-up');\n  up.onclick = slideUp;\n\n  const down = document.getElementById('slide-down');\n  down.onclick = slideDown;\n\n  //zoom controls\n  const zoomFactor = 3/2;\n\n  const currentZoomDisplay = document.getElementById('zoom-factor');\n\n  const zoomIn = () => {\n    scale /= zoomFactor;\n    updateCenterDisplay();\n  };\n\n  const zoomOut = () => {\n    scale *= zoomFactor;\n    updateCenterDisplay();\n  };\n\n  const resetZoom = () => {\n    scale = 2;\n    updateCenterDisplay();\n  };\n  //\n  // const dial = $('.dial').knob({\n  //   'change': () => { scale = this.value; }\n  // });\n\n  const zoom = document.getElementById('in');\n  zoom.onclick = zoomIn;\n\n  const zoomReset = document.getElementById('reset-zoom');\n  zoomReset.onclick = resetZoom;\n\n  const zoomBack = document.getElementById('out');\n  zoomBack.onclick = zoomOut;\n\n\n\n  // Key binding for slide acitions\n  document.onkeydown= (e) => {\n    e.preventDefault();\n    switch (e.keyCode) {\n      case 37:\n        slideLeft();\n        break;\n      case 38:\n        slideUp();\n        break;\n      case 39:\n        slideRight();\n        break;\n      case 40:\n        slideDown();\n        break;\n      case 90:\n        zoomIn();\n        break;\n      case 88:\n        zoomOut();\n        break;\n      case 82:\n        resetZoom();\n        break;\n    }\n  };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./main.js","const drawGrid = (ctx, center, scale) => {\n  // start by clearing the grid and setting the stroke style\n  ctx.clearRect(0,0,500,500);\n  ctx.strokeStyle = \"#222\";\n\n  //horizontal lines\n  ctx.moveTo(35, 125);\n  ctx.lineTo(500,125);\n  ctx.stroke();\n\n  ctx.moveTo(35, 250);\n  ctx.lineTo(500,250);\n  ctx.stroke();\n\n  ctx.moveTo(35, 375);\n  ctx.lineTo(500,375);\n  ctx.stroke();\n\n  //vertical lines\n  ctx.moveTo(125, 20);\n  ctx.lineTo(125, 500);\n  ctx.stroke();\n\n  ctx.moveTo(250, 20);\n  ctx.lineTo(250, 500);\n  ctx.stroke();\n\n  ctx.moveTo(375, 20);\n  ctx.lineTo(375, 500);\n  ctx.stroke();\n\n  // Add number marking\n  ctx.font = \"18px Scada Sans-serif\";\n\n  //set numbers based on scale and center\n  const p = 2; // p for 'precision'\n\n  ctx.fillText(`${(center.i + scale/2).toFixed(p)}i`, 3, 125 );\n  ctx.fillText(`${(center.i).toFixed(p)}i`, 3, 250 );\n  ctx.fillText(`${(center.i - scale/2).toFixed(p)}i`, 3, 375 );\n  ctx.fillText(`${(center.r - scale/2).toFixed(p)}`, 110, 15 );\n  ctx.fillText(`${(center.r).toFixed(p)}`, 235, 15 );\n  ctx.fillText(`${(center.r + scale/2).toFixed(p)}`, 360, 15 );\n\n};\n\nexport default drawGrid;\n\n\n\n// WEBPACK FOOTER //\n// ./js/draw_grid.js","const expandMandlebrot = (real, imaginary, max) => {\n  let incsCount = 0;\n  let r = real;\n  let i = imaginary;\n  let magnitude = Math.sqrt(real * real + imaginary * imaginary);\n  let newReal = 0;\n  while(magnitude < 4.0) {\n    ++incsCount;\n    if(incsCount > max) { return -1; }\n    newReal = r * r - i * i + real;\n    i = r * i * 2 + imaginary;\n    r = newReal;\n    magnitude = Math.sqrt(r * r + i * i);\n  }\n  return incsCount;\n};\n\nexport default expandMandlebrot;\n//\n//\n// function exapand_M(real,imaginary,MAX) {\n//   var count=0;\n//   var r = real, i = imaginary;\n//   var mag = Math.sqrt(r * r + i * i);\n//   var new_r = 0.0;\n//   while( mag < 4.0 ) {\n//     ++count;\n//     if(count > MAX) { return -1; }\n//     new_r = r * r - i * i + real;\n//     i = r * i * 2 + imaginary;\n//     r = new_r;\n//     mag = Math.sqrt(r * r + i * i);\n//   }\n//   return count;\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./js/expand_mandlebrot.js","import expandMandlebrot from './expand_mandlebrot';\n\nconst drawMandlebrot = (canvas, viewPort, colorsObj, max) => {\n  const ctx = canvas.getContext('2d');\n  const width = canvas.width;\n  const height = canvas.height;\n  const imgData = ctx.getImageData(0, 0, width, height);\n  const cutoffs = Object.keys(colorsObj);\n  const centerR = viewPort.center.r;\n  const centerI = viewPort.center.i;\n  const scale = viewPort.scale;\n\n  // loop over pixels on canvas, mapping each pixel to a Complex numbers\n  // move by 4s because each pixel has 4 values for R, G, B and Alpha\n  for(let j = 0; j < imgData.data.length; j += 4) {\n    const x = (j / 4) % width;\n    const y = ((j / 4) - x)/ width;\n\n    const r = (centerR - scale) + (x / width) * 2 * scale;\n    const i = (centerI + scale) - (y / width) * 2 * scale;\n\n    const incsToEscape = expandMandlebrot(r, i, max);\n\n    for(let k = 0; k < cutoffs.length; k++) {\n      if (incsToEscape < cutoffs[k]) {\n        imgData.data[j] = colorsObj[cutoffs[k]][0]; //red channel\n        imgData.data[j + 1] = colorsObj[cutoffs[k]][1]; //green channel\n        imgData.data[j + 2] = colorsObj[cutoffs[k]][2]; //blue channel\n        imgData.data[j + 3] = 255; //alpha channel\n        break;\n      }\n    }\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\nexport default drawMandlebrot;\n\n// function draw_Mandlebrot() {\n//    //first access the canvas, create a context, and image Object\n//    var mCanvas = document.getElementById(\"mandlebrot\");\n//    var mCtx = mCanvas.getContext(\"2d\");\n//    var mImageData = mCtx.getImageData(0,0,mCanvas.width,mCanvas.height);\n//    var width = mCanvas.width;\n//    var MaxIncs = MAX_ITERATIONS;\n//    var alpha = 255;\n//    var colors = [[255,255,255],[0,0,0], [16,22,76],[27,44,153],[50,109,178], [76,172,191], [100,240,225],[156,255,244],[255,255,255]];\n//    for (var i = 0; i <colors.length; i++) {\n//      colors[i].push(alpha);\n//    }\n//    var cutoffs =[2, 5, 10, 20, 40, 80, 160, 320, MAX_ITERATIONS];\n//    console.log(colors);\n//\n//    //then loop through the pixels in the imageObject, and color them based on their number of escape iterations\n//    //call exapand_M() to calculate how many iterations to escape\n//    for(var i = 0; i < mImageData.data.length; i += 4) {\n//       //first, get pixel coords\n//       var X = (i/4) % width;\n//       var Y = ((i/4) - X)/width;\n//\n//       //then get complex coords\n//       var R = (cenR - currentRange/2) + (X/width)*currentRange;\n//       var I = (cenI + currentRange/2) - (Y/width)*currentRange;\n//\n//       //pass complex coords to exap and_M\n//       var incsToEscape = exapand_M(R,I,MaxIncs);\n//       //console.log(\"At Pixel (\" + X + \", \" + Y + \")\" + \" it took \" + incsToEscape + \" to escape.\")\n//\n//       //based on the outcome, paint the pixel a color\n//       //\n//       //New plan here is to abstract out the RGBA from these calculations as well as the number of colors\n//       //\n//       //need to think of a way to let the user decide how many iterations, and what the color ranges\n//\n//       //will be. I think the easiest way to go is let the user select MAX_ITERATIONS and add a color\n//\n//       //picker for each of the ranges. This idea may need to be adjusted for better imaging.\n//       //if (incsToEscape <= 1) {}\n//       for (var j = 0; j < cutoffs.length; j++) {\n//         if (incsToEscape < cutoffs[j]) {\n//           mImageData.data[i] = colors[j][0];   //RED\n//           mImageData.data[i+1] = colors[j][1]; //GREEN\n//           mImageData.data[i+2] = colors[j][2]; //BlUE\n//           mImageData.data[i+3] = colors[j][3]; //alpha\n//           break;\n//         }\n//       }\n//    }\n//    mCtx.putImageData(mImageData,0,0);\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./js/draw_mandlebrot.js"],"sourceRoot":""}